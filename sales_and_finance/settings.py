"""
Django settings for sales_and_finance project.

Generated by 'django-admin startproject' using Django 5.1.3.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

import os
from pathlib import Path
# from decouple import config

# Path dasar proyek
BASE_DIR = Path(__file__).resolve().parent.parent

# Konfigurasi Media
MEDIA_URL = "/media/"
MEDIA_ROOT = os.path.join(BASE_DIR, "media")

# Konfigurasi Static Files
STATIC_URL = "static/"

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-agt1jdcq+w%2t&0f+w1f9qrhkk4g!j)((s3y7!kjzwz6)ge7zc'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']

# settings.py
# from decouple import config
# GUPSHUP_API_KEY = config('GUPSHUP_API_KEY')
# GUPSHUP_SOURCE_NUMBER = config('GUPSHUP_SOURCE_NUMBER')

# settings.py
GUPSHUP_API_KEY = 'sk_49b512570561442898bf2a6cb4b4c001' 
GUPSHUP_SOURCE_NUMBER = '917834811114'

# pengaturan untuk menjalankan tugas di latar belakang
# BACKGROUND_TASK_RUN_ASYNC = True
# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    # add depedencies
    'rest_framework',
    # 'background_task',
    # 'stock',
    'stock.apps.StockConfig',
    'sales',
    'finance',
    'notifications',
    'corsheaders',
    'django_filters',
]

MIDDLEWARE = [
    #install cors
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'sales_and_finance.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'stock/templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'sales_and_finance.wsgi.application'

# Mengizinkan akses dari frontend React
CORS_ALLOWED_ORIGINS = [
    "http://localhost:3000",
    "http://localhost:3001",
    "http://172.20.10.3:5001"
]



# Jika ingin mengizinkan semua domain (tidak disarankan untuk production)
CORS_ALLOW_ALL_ORIGINS = True  # (Opsional, hanya gunakan saat testing)

# Mengizinkan metode yang boleh diakses
CORS_ALLOW_METHODS = [
    "GET",
    "POST",
    "PUT",
    "DELETE",
    "OPTIONS",
]

# Mengizinkan header tertentu dalam request
CORS_ALLOW_HEADERS = [
    "content-type",
    "authorization",
]


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases


# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.mysql',
#         'NAME': 'dairytrack_massfortso',  # Ganti dengan nama database MySQL
#         'USER': 'root',  # Ganti dengan username MySQL
#         'PASSWORD': '',  # Ganti dengan password MySQL
#         'HOST': 'localhost',  # Jika menggunakan server lain, ganti sesuai kebutuhan
#         'PORT': '3306',  # Port default MySQL
#         'OPTIONS': {
#             'charset': 'utf8mb4',  # Menggunakan utf8mb4 agar mendukung emoji dan karakter khusus
#         },
#     }
# }

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'DairyTrack_represent',  # Nama database MySQL
        'USER': 'DairyTrack_represent',  # Username MySQL
        'PASSWORD': '212bf667b8832e0a530401195b131a542e31a4f0',  # Password MySQL
        'HOST': 'rlsoy.h.filess.io',  # Host MySQL
        'PORT': '3307',  # Port MySQL
        'OPTIONS': {
            'charset': 'utf8mb4',  # Mendukung emoji dan karakter khusus
        },
    }
}


# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.mysql',
#         'NAME': 'tthsanbe_t5th',
#         'USER': 'tthsanbe_TA',
#         'PASSWORD': 'Cy2U0x1JJRFY',
#         'HOST': '178.248.73.218',
#         'PORT': '3306',
#         'OPTIONS': {
#             'charset': 'utf8mb4',
#         },
#     }
# }


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

# TIME_ZONE = 'UTC'
TIME_ZONE = 'Asia/Jakarta'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

REST_FRAMEWORK = {
    'DEFAULT_FILTER_BACKENDS': ['django_filters.rest_framework.DjangoFilterBackend'],
    'DEFAULT_PARSER_CLASSES': [
        'rest_framework.parsers.JSONParser',
        'rest_framework.parsers.FormParser',  # Tambahkan parser ini
        'rest_framework.parsers.MultiPartParser',
    ],
}


LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': '{levelname} {asctime} {module} {message}',
            'style': '{',
        },
    },
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
            'formatter': 'verbose',
        },
        'stock_file': {
            'class': 'logging.FileHandler',
            'filename': os.path.join(BASE_DIR, 'logs/stock_tasks.log'),
            'formatter': 'verbose',
        },
        'whatsapp_file': {
            'class': 'logging.FileHandler',
            'filename': os.path.join(BASE_DIR, 'logs/whatsapp_errors.log'),
            'formatter': 'verbose',
        },
    },
    'loggers': {
        'stock': {
            'handlers': ['console', 'stock_file'],
            'level': 'INFO',
            'propagate': False,
        },
        'django': {
            'handlers': ['console', 'whatsapp_file'],
            'level': 'INFO',  # Ubah dari DEBUG ke INFO untuk mengurangi log autoreload
            'propagate': False,
        },
        '': {
            'handlers': ['console', 'whatsapp_file'],
            'level': 'WARNING',  # Tingkatkan ke WARNING untuk root logger
            'propagate': False,
        },
    },
}